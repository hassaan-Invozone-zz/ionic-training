/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface FormComponent {
    }
    interface InputComponent {
        "inputHandler": (e: MouseEvent) => void;
        "label": string;
        "value": string;
    }
    interface IsLoadingApp {
    }
    interface LoginScreen {
    }
    interface MyApp {
    }
    interface RouterByLogin {
    }
    interface RouterByLogout {
    }
    interface SelectComponent {
        "inputHandler": (e: MouseEvent) => void;
        "label": string;
        "value": string;
    }
    interface TabsComponent {
    }
}
declare global {
    interface HTMLFormComponentElement extends Components.FormComponent, HTMLStencilElement {
    }
    var HTMLFormComponentElement: {
        prototype: HTMLFormComponentElement;
        new (): HTMLFormComponentElement;
    };
    interface HTMLInputComponentElement extends Components.InputComponent, HTMLStencilElement {
    }
    var HTMLInputComponentElement: {
        prototype: HTMLInputComponentElement;
        new (): HTMLInputComponentElement;
    };
    interface HTMLIsLoadingAppElement extends Components.IsLoadingApp, HTMLStencilElement {
    }
    var HTMLIsLoadingAppElement: {
        prototype: HTMLIsLoadingAppElement;
        new (): HTMLIsLoadingAppElement;
    };
    interface HTMLLoginScreenElement extends Components.LoginScreen, HTMLStencilElement {
    }
    var HTMLLoginScreenElement: {
        prototype: HTMLLoginScreenElement;
        new (): HTMLLoginScreenElement;
    };
    interface HTMLMyAppElement extends Components.MyApp, HTMLStencilElement {
    }
    var HTMLMyAppElement: {
        prototype: HTMLMyAppElement;
        new (): HTMLMyAppElement;
    };
    interface HTMLRouterByLoginElement extends Components.RouterByLogin, HTMLStencilElement {
    }
    var HTMLRouterByLoginElement: {
        prototype: HTMLRouterByLoginElement;
        new (): HTMLRouterByLoginElement;
    };
    interface HTMLRouterByLogoutElement extends Components.RouterByLogout, HTMLStencilElement {
    }
    var HTMLRouterByLogoutElement: {
        prototype: HTMLRouterByLogoutElement;
        new (): HTMLRouterByLogoutElement;
    };
    interface HTMLSelectComponentElement extends Components.SelectComponent, HTMLStencilElement {
    }
    var HTMLSelectComponentElement: {
        prototype: HTMLSelectComponentElement;
        new (): HTMLSelectComponentElement;
    };
    interface HTMLTabsComponentElement extends Components.TabsComponent, HTMLStencilElement {
    }
    var HTMLTabsComponentElement: {
        prototype: HTMLTabsComponentElement;
        new (): HTMLTabsComponentElement;
    };
    interface HTMLElementTagNameMap {
        "form-component": HTMLFormComponentElement;
        "input-component": HTMLInputComponentElement;
        "is-loading-app": HTMLIsLoadingAppElement;
        "login-screen": HTMLLoginScreenElement;
        "my-app": HTMLMyAppElement;
        "router-by-login": HTMLRouterByLoginElement;
        "router-by-logout": HTMLRouterByLogoutElement;
        "select-component": HTMLSelectComponentElement;
        "tabs-component": HTMLTabsComponentElement;
    }
}
declare namespace LocalJSX {
    interface FormComponent {
    }
    interface InputComponent {
        "inputHandler"?: (e: MouseEvent) => void;
        "label"?: string;
        "value"?: string;
    }
    interface IsLoadingApp {
    }
    interface LoginScreen {
    }
    interface MyApp {
    }
    interface RouterByLogin {
    }
    interface RouterByLogout {
    }
    interface SelectComponent {
        "inputHandler"?: (e: MouseEvent) => void;
        "label"?: string;
        "value"?: string;
    }
    interface TabsComponent {
    }
    interface IntrinsicElements {
        "form-component": FormComponent;
        "input-component": InputComponent;
        "is-loading-app": IsLoadingApp;
        "login-screen": LoginScreen;
        "my-app": MyApp;
        "router-by-login": RouterByLogin;
        "router-by-logout": RouterByLogout;
        "select-component": SelectComponent;
        "tabs-component": TabsComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "form-component": LocalJSX.FormComponent & JSXBase.HTMLAttributes<HTMLFormComponentElement>;
            "input-component": LocalJSX.InputComponent & JSXBase.HTMLAttributes<HTMLInputComponentElement>;
            "is-loading-app": LocalJSX.IsLoadingApp & JSXBase.HTMLAttributes<HTMLIsLoadingAppElement>;
            "login-screen": LocalJSX.LoginScreen & JSXBase.HTMLAttributes<HTMLLoginScreenElement>;
            "my-app": LocalJSX.MyApp & JSXBase.HTMLAttributes<HTMLMyAppElement>;
            "router-by-login": LocalJSX.RouterByLogin & JSXBase.HTMLAttributes<HTMLRouterByLoginElement>;
            "router-by-logout": LocalJSX.RouterByLogout & JSXBase.HTMLAttributes<HTMLRouterByLogoutElement>;
            "select-component": LocalJSX.SelectComponent & JSXBase.HTMLAttributes<HTMLSelectComponentElement>;
            "tabs-component": LocalJSX.TabsComponent & JSXBase.HTMLAttributes<HTMLTabsComponentElement>;
        }
    }
}
